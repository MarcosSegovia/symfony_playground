services:
    ########################
    # Application Services #
    ########################
    user_manager.application_service.user.add.invalidate_user_cache_when_user_added.use_case:
        public: false
        class: UserManager\Application\Service\User\Add\InvalidateUserCacheWhenUserAddedUseCase
        arguments: ["@user_manager.infrastructure.cache"]

    user_manager.application_service.user.update.invalidate_user_cache_when_user_updated.use_case:
        public: false
        class: UserManager\Application\Service\User\Update\InvalidateUserCacheWhenUserUpdatedUseCase
        arguments: ["@user_manager.infrastructure.cache"]

    user_manager.application_service.user.delete.invalidate_user_cache_when_user_deleted.use_case:
        public: false
        class: UserManager\Application\Service\User\Delete\InvalidateUserCacheWhenUserDeletedUseCase
        arguments: ["@user_manager.infrastructure.cache"]

    ##################
    # Infrastructure #
    ##################
    user_manager.infrastructure.cache:
        alias: user_manager.infrastructure.cache.filesystem_cache

    user_manager.infrastructure.cache.filesystem_cache:
        class: UserManager\Infrastructure\Cache\FilesystemCache
        arguments: ["%cache.filesystem.path%"]

    user_manager.infrastructure.repository.cache.user:
        public: false
        class: UserManager\Infrastructure\Repository\Cache\User\UserCacheRepository
        decorates: user_manager.domain.infrastructure.repository.user
        decoration_inner_name: inner.infrastructure.repository.user
        arguments:
            - "@inner.infrastructure.repository.user"
            - "@user_manager.infrastructure.cache"

    user_manager.infrastructure.event_subscriber.invalidate_user_cache_when_user_added:
        class: UserManager\Infrastructure\EventSubscriber\InvalidateUserCacheWhenUserAdded
        arguments: ["@user_manager.application_service.user.add.invalidate_user_cache_when_user_added.use_case"]


    user_manager.infrastructure.event_subscriber.invalidate_user_cache_when_user_updated:
        class: UserManager\Infrastructure\EventSubscriber\InvalidateUserCacheWhenUserUpdated
        arguments: ["@user_manager.application_service.user.update.invalidate_user_cache_when_user_updated.use_case"]

    user_manager.infrastructure.event_subscriber.invalidate_user_cache_when_user_deleted:
        class: UserManager\Infrastructure\EventSubscriber\InvalidateUserCacheWhenUserDeleted
        arguments: ["@user_manager.application_service.user.delete.invalidate_user_cache_when_user_deleted.use_case"]
